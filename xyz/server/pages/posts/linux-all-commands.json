{"pageProps":{"post":{"slug":"linux-all-commands","id":"66e02c5a4d1d260001ae6447","uuid":"53c82d03-79b9-490c-a9dd-5594a77a35aa","title":"All Linux Commands","html":"<p></p><h3 id=\"1-introduction-to-linux-and-shells\">1. <strong>Introduction to Linux and Shells</strong></h3><p>• <strong>Linux Overview:</strong> Linux is an open-source operating system known for its stability, security, and flexibility. It’s widely used in servers, desktops, and embedded systems.</p><p>• <strong>Shells:</strong> A shell is a command-line interface (CLI) that allows users to interact with the operating system. Common shells include Bash (Bourne Again Shell), Zsh, and Fish. Shells interpret user commands and execute them.</p><p><strong>Example:</strong> Running a command in the Bash shell:</p><pre><code class=\"language-bash\">echo \"Hello, Linux!\"\n\n</code></pre><p><strong>Output:</strong></p><pre><code>Hello, Linux!\n\n</code></pre><p><strong>Explanation:</strong> This command uses the Bash shell to output the text \"Hello, Linux!\" to the terminal.</p><h3 id=\"2-man-command\">2. <strong><code>man</code> Command</strong></h3><p><strong>Purpose:</strong> The man (manual) command provides detailed documentation for Linux commands and programs.</p><p><strong>Usage:</strong> To access a command’s manual, type man followed by the command name (e.g., man ls). Within the man pages, you can navigate using arrow keys, search using /, and exit with q.</p><p><strong>Example:</strong> Viewing the manual page for the <code>ls</code> command:</p><pre><code class=\"language-bash\">man ls\n\n</code></pre><p><strong>Output:</strong></p><pre><code>LS(1)                        User Commands                       LS(1)\n\nNAME\n     ls - list directory contents\n\nSYNOPSIS\n     ls [OPTION]... [FILE]...\n\nDESCRIPTION\n     List information about the FILEs (the current directory by default).\n</code></pre><p><strong>Explanation:</strong> This output shows the beginning of the manual page for <code>ls</code>. You can scroll through the content using the arrow keys and exit by pressing <code>q</code>.</p><p><a href=\"https://www.notion.so/man-Linux-Command-639e46c19e21415080766cbf06ae0c62?pvs=21&ref=localhost\">man Linux Command</a></p><h3 id=\"3-ls-command\">3. <strong><code>ls</code> Command</strong></h3><p><strong>Purpose:</strong> The ls command lists the files and directories within the current directory.</p><p><strong>Options:</strong></p><p>• -l: Displays detailed information (permissions, owner, size, etc.).</p><p>• -a: Shows all files, including hidden ones (those starting with .).</p><p>• -h: Makes the file sizes human-readable (e.g., KB, MB).</p><p><strong>Example:</strong> Listing files in the current directory:</p><pre><code class=\"language-bash\">ls\n</code></pre><p><strong>Output:</strong></p><pre><code>Documents  Downloads  Music  Pictures  Videos\n</code></pre><p><strong>Example:</strong> Listing all files, including hidden ones, with detailed information:</p><pre><code class=\"language-bash\">ls -la\n</code></pre><p><strong>Output:</strong></p><pre><code>drwxr-xr-x 5 user user  4096 Aug 16 10:00 .\ndrwxr-xr-x 3 user user  4096 Aug 16 09:00 ..\n-rw-r--r-- 1 user user   220 Aug 15 20:00 .bash_logout\n-rw-r--r-- 1 user user  3771 Aug 15 20:00 .bashrc\ndrwxr-xr-x 2 user user  4096 Aug 16 09:30 Documents\n\n</code></pre><p><strong>Explanation:</strong> The first command lists files in the current directory. The second command lists all files (including hidden ones) with details like permissions, owner, and modification date.</p><h3 id=\"4-cd-command\">4. <strong><code>cd</code> Command</strong></h3><p><strong>Purpose:</strong> The cd (change directory) command allows you to navigate between directories.</p><p><strong>Usage:</strong></p><p>• cd /path/to/directory: Moves to the specified directory.</p><p>• cd ..: Moves up one directory level.</p><p>• cd ~: Moves to the user’s home directory.</p><p><strong>Example:</strong> Navigating to the <code>Documents</code> directory:</p><pre><code class=\"language-bash\">cd Documents\n</code></pre><p><strong>Output:</strong></p><pre><code>(No output, but the prompt changes to show the current directory)\n</code></pre><p><strong>Example:</strong> Moving up one directory level:</p><pre><code class=\"language-bash\">cd ..\n</code></pre><p><strong>Output:</strong></p><pre><code>(No output, but the prompt changes to show the parent directory)\n</code></pre><p><strong>Explanation:</strong> The <code>cd Documents</code> command changes the current directory to <code>Documents</code>. The <code>cd ..</code> command moves you up one directory level.</p><h3 id=\"5-pwd-command\">5. <strong><code>pwd</code> Command</strong></h3><p><strong>Purpose:</strong> The pwd (print working directory) command displays the full path of the current directory.</p><p><strong>Usage:</strong> Simply type pwd to see the directory you are currently in. It helps confirm your location in the filesystem.</p><p><strong>Example:</strong> Displaying the current directory:</p><pre><code class=\"language-bash\">pwd\n</code></pre><p><strong>Output:</strong></p><pre><code>/home/user/Documents\n</code></pre><p><strong>Explanation:</strong> This command shows the full path of the current working directory, which in this case is <code>/home/user/Documents</code>.</p><h3 id=\"6-mkdir-command\">6. <strong><code>mkdir</code> Command</strong></h3><p><strong>Purpose:</strong> The mkdir (make directory) command creates new directories.</p><p><strong>Usage:</strong></p><p>• mkdir directory_name: Creates a single directory.</p><p>• mkdir -p /path/to/directory: Creates nested directories, creating any parent directories as needed.</p><p><strong>Example:</strong> Creating a new directory named <code>new_folder</code>:</p><pre><code class=\"language-bash\">mkdir new_folder\n\n</code></pre><p><strong>Output:</strong></p><pre><code>(No output, but a new directory is created)\n\n</code></pre><p><strong>Example:</strong> Creating a nested directory structure:</p><pre><code class=\"language-bash\">mkdir -p projects/java/app\n\n</code></pre><p><strong>Output:</strong></p><pre><code>(No output, but the directories `projects/java/app` are created)\n\n</code></pre><p><strong>Explanation:</strong> The first command creates a single directory named <code>new_folder</code>. The second command creates a nested directory structure, with <code>projects</code>, <code>java</code>, and <code>app</code>.</p><h3 id=\"7-rmdir-command\">7. <strong><code>rmdir</code> Command</strong></h3><p><strong>Purpose:</strong> The rmdir (remove directory) command removes empty directories.</p><p><strong>Usage:</strong></p><p>• rmdir directory_name: Removes the specified empty directory.</p><p>• For directories with content, use rm -r to remove them recursively.</p><p><strong>Example:</strong> Removing an empty directory named <code>old_folder</code>:</p><pre><code class=\"language-bash\">rmdir old_folder\n\n</code></pre><p><strong>Output:</strong></p><pre><code>(No output, but the directory is removed)\n\n</code></pre><p><strong>Explanation:</strong> The <code>rmdir</code> command removes an empty directory. If the directory contains files, it will not be removed.</p><h3 id=\"8-mv-command\">8. <strong><code>mv</code> Command</strong></h3><p><strong>Purpose:</strong> The mv (move) command is used to move or rename files and directories.</p><p><strong>Usage:</strong></p><p>• mv source destination: Moves a file or directory to a new location.</p><p>• mv old_name new_name: Renames a file or directory.</p><p><strong>Example:</strong> Renaming a file from <code>old_name.txt</code> to <code>new_name.txt</code>:</p><pre><code class=\"language-bash\">mv old_name.txt new_name.txt\n\n</code></pre><p><strong>Output:</strong></p><pre><code>(No output, but the file is renamed)\n\n</code></pre><p><strong>Example:</strong> Moving a file <code>document.txt</code> to the <code>Documents</code> directory:</p><pre><code class=\"language-bash\">mv document.txt Documents/\n\n</code></pre><p><strong>Output:</strong></p><pre><code>(No output, but the file is moved to the `Documents` directory)\n\n</code></pre><p><strong>Explanation:</strong> The <code>mv</code> command is used to move files or directories and to rename them. The first example renames a file, while the second example moves the file to a different directory.</p><h3 id=\"9-cp-command\">9. <strong><code>cp</code> Command</strong></h3><p><strong>Purpose:</strong> The cp (copy) command copies files or directories.</p><p><strong>Usage:</strong></p><p>• cp source destination: Copies a file to a new location.</p><p>• cp -r source destination: Recursively copies directories and their contents.</p><p><strong>Example:</strong> Copying a file <code>file.txt</code> to <code>backup.txt</code>:</p><pre><code class=\"language-bash\">cp file.txt backup.txt\n\n</code></pre><p><strong>Output:</strong></p><pre><code>(No output, but the file is copied)\n\n</code></pre><p><strong>Example:</strong> Copying a directory <code>my_folder</code> and its contents to <code>backup_folder</code>:</p><pre><code class=\"language-bash\">cp -r my_folder backup_folder\n\n</code></pre><p><strong>Output:</strong></p><pre><code>(No output, but the directory and its contents are copied)\n\n</code></pre><p><strong>Explanation:</strong> The <code>cp</code> command copies files or directories. The <code>r</code> option is used to copy directories recursively.</p><h3 id=\"10-open-command\">10. <strong><code>open</code> Command</strong></h3><p><strong>Purpose:</strong> The open command opens files and applications in the default application associated with the file type.</p><p><strong>Usage:</strong></p><p>• open file_name: Opens the specified file.</p><p>• On Linux systems, xdg-open is commonly used as an equivalent, especially in graphical environments.</p><p><strong>Example:</strong> Opening a file <code>example.txt</code> using the default application:</p><pre><code class=\"language-bash\">open example.txt\n\n</code></pre><p><strong>Output:</strong></p><pre><code>(No output, but the file is opened in the default text editor)\n\n</code></pre><p><strong>Example:</strong> Opening a directory <code>Documents</code> in Finder (Mac) or File Explorer (Linux with a GUI):</p><pre><code class=\"language-bash\">open Documents/\n\n</code></pre><p><strong>Output:</strong></p><pre><code>(No output, but the directory is opened in the file manager)\n\n</code></pre><p><strong>Explanation:</strong> The <code>open</code> command is primarily used on macOS to open files or directories with their default applications. On Linux, a similar command would be <code>xdg-open</code>.</p><h3 id=\"11-touch-command\">11. <strong><code>touch</code> Command</strong></h3><p><strong>Purpose:</strong> Creates an empty file or updates the timestamp of an existing file.</p><p><strong>Example:</strong></p><pre><code class=\"language-bash\">touch newfile.txt\n\n</code></pre><p><strong>Use Case:</strong> Quickly create a new file or update the modification time of a file without editing its content.</p><h3 id=\"12-find-command\">12. <strong><code>find</code> Command</strong></h3><p><strong>Purpose:</strong> Searches for files and directories within a specified directory and its subdirectories.</p><p><strong>Example:</strong></p><pre><code class=\"language-bash\">find . -name \"file.txt\"\n\n</code></pre><p><strong>Use Case:</strong> Locate files based on their name, type, size, or other attributes across the file system.</p><h3 id=\"13-ln-command\">13. <strong><code>ln</code> Command</strong></h3><p><strong>Purpose:</strong> Creates links between files, either as hard links or symbolic (soft) links.</p><p><strong>Example:</strong></p><pre><code class=\"language-bash\">ln -s file.txt link_to_file.txt\n\n</code></pre><p><strong>Use Case:</strong> Link files for easy access or to avoid duplicating content, using symbolic links for flexible file referencing.</p><h3 id=\"14-gzip-command\">14. <strong><code>gzip</code> Command</strong></h3><p><strong>Purpose:</strong> Compresses files to reduce their size using the GNU zip algorithm.</p><p><strong>Example:</strong></p><pre><code class=\"language-bash\">gzip example.txt\n\n</code></pre><p><strong>Use Case:</strong> Compress files to save disk space or to prepare files for transfer over the network.</p><h3 id=\"15-gunzip-command\">15. <strong><code>gunzip</code> Command</strong></h3><p><strong>Purpose:</strong> Decompresses files that were compressed using the <code>gzip</code> command.</p><p><strong>Example:</strong></p><pre><code class=\"language-bash\">gunzip example.txt.gz\n\n</code></pre><p><strong>Use Case:</strong> Restore compressed files to their original size and format for use or further processing.</p><h3 id=\"16-tar-command\">16. <strong><code>tar</code> Command</strong></h3><p><strong>Purpose:</strong> Archives multiple files into a single file, often combined with compression.</p><p><strong>Example:</strong></p><pre><code class=\"language-bash\">tar -czvf archive.tar.gz folder/\n\n</code></pre><p><strong>Use Case:</strong> Create a compressed archive of a directory or group of files for easier storage or transfer.</p><h3 id=\"17-alias-command\">17. <strong><code>alias</code> Command</strong></h3><p><strong>Purpose:</strong> Creates shortcuts for long or complex commands.</p><p><strong>Example:</strong></p><pre><code class=\"language-bash\">alias ll=\"ls -la\"\n\n</code></pre><p><strong>Use Case:</strong> Simplify frequently used commands by creating an alias for quick access.</p><h3 id=\"18-cat-command\">18. <strong><code>cat</code> Command</strong></h3><p><strong>Purpose:</strong> Concatenates and displays the content of files.</p><p><strong>Example:</strong></p><pre><code class=\"language-bash\">cat file.txt\n\n</code></pre><p><strong>Use Case:</strong> View the contents of a file or combine multiple files into one.</p><h3 id=\"19-less-command\">19. <strong><code>less</code> Command</strong></h3><p><strong>Purpose:</strong> Allows you to view the content of a file one screen at a time.</p><p><strong>Example:</strong></p><pre><code class=\"language-bash\">less file.txt\n\n</code></pre><p><strong>Use Case:</strong> Navigate through large text files without opening them entirely in memory, making it efficient for viewing logs or large documents.</p><h3 id=\"20-tail-command\">20. <strong><code>tail</code> Command</strong></h3><p><strong>Purpose:</strong> Displays the last few lines of a file, with the option to monitor the file for new content.</p><p><strong>Example:</strong></p><pre><code class=\"language-bash\">tail -f logfile.txt\n\n</code></pre><p><strong>Use Case:</strong> Monitor real-time updates to a log file, useful for debugging or observing system behavior.</p><h3 id=\"21-wc-command\">21. <strong><code>wc</code> Command</strong></h3><p><strong>Purpose:</strong> Counts lines, words, and characters in a file.</p><p><strong>Example:</strong></p><pre><code class=\"language-bash\">wc file.txt\n\n</code></pre><p><strong>Use Case:</strong> Quickly get statistical information about the content of a file, such as the number of lines, words, and characters.</p><h3 id=\"22-grep-command\">22. <strong><code>grep</code> Command</strong></h3><p><strong>Purpose:</strong> Searches for patterns in files and outputs matching lines.</p><p><strong>Example:</strong></p><pre><code class=\"language-bash\">grep \"search_term\" file.txt\n\n</code></pre><p><strong>Use Case:</strong> Find specific lines within files that match a given pattern, useful for searching through text files or logs.</p><h3 id=\"23-sort-command\">23. <strong><code>sort</code> Command</strong></h3><p><strong>Purpose:</strong> Sorts lines of text files in various orders.</p><p><strong>Example:</strong></p><pre><code class=\"language-bash\">sort file.txt\n\n</code></pre><p><strong>Use Case:</strong> Organize lines of text alphabetically or numerically, useful for data processing and organization.</p><h3 id=\"24-uniq-command\">24. <strong><code>uniq</code> Command</strong></h3><p><strong>Purpose:</strong> Removes duplicate lines from a sorted file.</p><p><strong>Example:</strong></p><pre><code class=\"language-bash\">sort file.txt | uniq\n\n</code></pre><p><strong>Use Case:</strong> Filter out duplicate lines from a sorted file, often used in conjunction with <code>sort</code> to process and clean data.</p><h3 id=\"25-diff-command\">25. <strong><code>diff</code> Command</strong></h3><p><strong>Purpose:</strong> Compares files line by line and shows differences between them.</p><p><strong>Example:</strong></p><pre><code class=\"language-bash\">diff file1.txt file2.txt\n\n</code></pre><p><strong>Use Case:</strong> Identify differences between two files, useful for comparing versions of documents or source code changes.</p><h3 id=\"26-echo-command\">26. <strong><code>echo</code> Command</strong></h3><p><strong>Purpose:</strong> Displays a line of text or variables to the standard output.</p><p><strong>Example:</strong></p><pre><code class=\"language-bash\">echo \"Hello, World!\"\n\n</code></pre><p><strong>Output:</strong></p><pre><code>Hello, World!\n\n</code></pre><p><strong>Use Case:</strong> Print messages or values of variables to the terminal, often used in scripts for feedback or debugging.</p><h3 id=\"27-chown-command\">27. <strong><code>chown</code> Command</strong></h3><p><strong>Purpose:</strong> Changes the owner and/or group of a file or directory.</p><p><strong>Example:</strong></p><pre><code class=\"language-bash\">chown user:group file.txt\n\n</code></pre><p><strong>Use Case:</strong> Modify file ownership to ensure proper access permissions and control over files and directories.</p><h3 id=\"28-chmod-command\">28. <strong><code>chmod</code> Command</strong></h3><p><strong>Purpose:</strong> Changes the permissions of a file or directory.</p><p><strong>Example:</strong></p><pre><code class=\"language-bash\">chmod 755 file.txt\n\n</code></pre><p><strong>Use Case:</strong> Set read, write, and execute permissions for files and directories, controlling user access.</p><h3 id=\"29-umask-command\">29. <strong><code>umask</code> Command</strong></h3><p><strong>Purpose:</strong> Sets default file creation permissions for the user.</p><p><strong>Example:</strong></p><pre><code class=\"language-bash\">umask 022\n\n</code></pre><p><strong>Use Case:</strong> Configure default permissions for newly created files and directories, typically set in shell initialization files.</p><h3 id=\"30-du-command\">30. <strong><code>du</code> Command</strong></h3><p><strong>Purpose:</strong> Estimates and displays disk usage of files and directories.</p><p><strong>Example:</strong></p><pre><code class=\"language-bash\">du -sh directory/\n\n</code></pre><p><strong>Output:</strong></p><pre><code>1.5G    directory/\n\n</code></pre><p><strong>Use Case:</strong> Check the disk space usage of directories and files, helpful for managing storage and finding large files.</p><h3 id=\"31-df-command\">31. <strong><code>df</code> Command</strong></h3><p><strong>Purpose:</strong> Displays information about disk space usage for file systems.</p><p><strong>Example:</strong></p><pre><code class=\"language-bash\">df -h\n\n</code></pre><p><strong>Output:</strong></p><pre><code>Filesystem      Size  Used Avail Use% Mounted on\n/dev/sda1       50G   20G   28G  42% /\n/dev/sdb1      100G   50G   45G  55% /data\n\n</code></pre><p><strong>Use Case:</strong> Check the available and used disk space on mounted file systems, useful for monitoring and managing disk usage.</p><h3 id=\"32-basename-command\">32. <strong><code>basename</code> Command</strong></h3><p><strong>Purpose:</strong> Strips directory and suffix from filenames, returning just the base name.</p><p><strong>Example:</strong></p><pre><code class=\"language-bash\">basename /path/to/file.txt\n\n</code></pre><p><strong>Output:</strong></p><pre><code>file.txt\n\n</code></pre><p><strong>Use Case:</strong> Extract the filename from a full path or remove a file extension, useful for script processing and filename manipulation.</p><h3 id=\"33-dirname-command\">33. <strong><code>dirname</code> Command</strong></h3><p><strong>Purpose:</strong> Strips the last component from the file path, returning the directory path.</p><p><strong>Example:</strong></p><pre><code class=\"language-bash\">dirname /path/to/file.txt\n\n</code></pre><p><strong>Output:</strong></p><pre><code>/path/to\n\n</code></pre><p><strong>Use Case:</strong> Extract the directory path from a full file path, useful for file manipulation and script automation.</p><h3 id=\"34-ps-command\">34. <strong><code>ps</code> Command</strong></h3><p><strong>Purpose:</strong> Displays information about active processes.</p><p><strong>Example:</strong></p><pre><code class=\"language-bash\">ps aux\n\n</code></pre><p><strong>Output:</strong></p><pre><code>USER       PID %CPU %MEM    VSZ   RSS TTY      STAT START   TIME COMMAND\nuser      1234  0.0  0.1  12345  6789 ?        Ss   10:00   0:00 bash\nuser      5678  1.2  0.5  23456 12345 ?        R    10:01   0:01 top\n\n</code></pre><p><strong>Use Case:</strong> View details of running processes, including their resource usage and status, useful for system monitoring and management.</p><h3 id=\"35-top-command\">35. <strong><code>top</code> Command</strong></h3><p><strong>Purpose:</strong> Provides a real-time, dynamic view of system processes and their resource usage.</p><p><strong>Example:</strong></p><pre><code class=\"language-bash\">top\n\n</code></pre><p><strong>Output:</strong></p><pre><code>top - 10:05:01 up 10 days,  2:17,  2 users,  load average: 0.20, 0.15, 0.10\nTasks:  57 total,   2 running, 55 sleeping,   0 stopped,   0 zombie\n%Cpu(s):  1.5 us,  0.5 sy,  0.0 ni, 97.5 id,  0.0 wa,  0.0 hi,  0.5 si,  0.0 st\nKiB Mem :  2048000 total,  1234567 free,   345678 used,   456789 buff/cache\nKiB Swap:  1024000 total,  987654 free,   123456 used.   789012 avail Mem\n\n  PID USER      PR  NI    VIRT    RES    SHR S  %CPU %MEM     TIME+ COMMAND\n 1234 user      20   0  123456  67890  12345 S   1.0  0.5   0:01.23 bash\n 5678 user      20   0  234567 123456  23456 R   2.5  1.0   0:05.67 top\n\n</code></pre><p><strong>Use Case:</strong> Monitor real-time system performance, including CPU and memory usage, process states, and overall system load, useful for system diagnostics and performance tuning.</p><h3 id=\"36-kill-command\">36. <strong><code>kill</code> Command</strong></h3><p><strong>Purpose:</strong> Sends a signal to terminate or modify the behavior of a process.</p><p><strong>Example:</strong></p><pre><code class=\"language-bash\">kill 1234\n\n</code></pre><p><strong>Output:</strong></p><pre><code>(No output if the signal is sent successfully; the process with PID 1234 is terminated)\n\n</code></pre><p><strong>Use Case:</strong> Terminate a process by its process ID (PID), useful for stopping unresponsive or unwanted processes.</p><h3 id=\"37-killall-command\">37. <strong><code>killall</code> Command</strong></h3><p><strong>Purpose:</strong> Sends a signal to terminate all processes matching a specified name.</p><p><strong>Example:</strong></p><pre><code class=\"language-bash\">killall firefox\n\n</code></pre><p><strong>Output:</strong></p><pre><code>(No output if the signal is sent successfully; all instances of Firefox are terminated)\n\n</code></pre><p><strong>Use Case:</strong> Terminate all processes with a specific name, useful for stopping multiple instances of a program.</p><h3 id=\"38-jobs-command\">38. <strong><code>jobs</code> Command</strong></h3><p><strong>Purpose:</strong> Lists all jobs running in the background or stopped jobs in the current shell session.</p><p><strong>Example:</strong></p><pre><code class=\"language-bash\">jobs\n\n</code></pre><p><strong>Output:</strong></p><pre><code>[1]+ 1234 Running                 ./script.sh &amp;\n[2]- 5678 Stopped                 vim\n\n</code></pre><p><strong>Use Case:</strong> View the status of background or stopped jobs, useful for managing multiple tasks within a shell session.</p><h3 id=\"39-bg-command\">39. <strong><code>bg</code> Command</strong></h3><p><strong>Purpose:</strong> Resumes a suspended job in the background.</p><p><strong>Example:</strong></p><pre><code class=\"language-bash\">bg %1\n\n</code></pre><p><strong>Output:</strong></p><pre><code>[1]+ ./script.sh &amp;\n\n</code></pre><p><strong>Use Case:</strong> Continue running a previously suspended job in the background, freeing up the terminal for other tasks.</p><h3 id=\"40-fg-command\">40. <strong><code>fg</code> Command</strong></h3><p><strong>Purpose:</strong> Brings a background job to the foreground.</p><p><strong>Example:</strong></p><pre><code class=\"language-bash\">fg %1\n\n</code></pre><p><strong>Output:</strong></p><pre><code>./script.sh\n\n</code></pre><p><strong>Use Case:</strong> Bring a background job to the foreground to interact with it directly, useful for resuming work on tasks that were previously running in the background.</p><h3 id=\"40-fg-command-1\">40. <strong><code>fg</code> Command</strong></h3><p><strong>Purpose:</strong> Brings a background job to the foreground.</p><p><strong>Example:</strong></p><pre><code class=\"language-bash\">fg %1\n\n</code></pre><p><strong>Output:</strong></p><pre><code>./script.sh\n\n</code></pre><p><strong>Use Case:</strong> Resume a background job and interact with it directly in the current terminal session.</p><h3 id=\"41-type-command\">41. <strong><code>type</code> Command</strong></h3><p><strong>Purpose:</strong> Displays the type of command (e.g., whether it is a shell built-in, function, or external command).</p><p><strong>Example:</strong></p><pre><code class=\"language-bash\">type ls\n\n</code></pre><p><strong>Output:</strong></p><pre><code>ls is /bin/ls\n\n</code></pre><p><strong>Use Case:</strong> Determine the nature and location of a command or function, useful for debugging and understanding command types.</p><h3 id=\"42-which-command\">42. <strong><code>which</code> Command</strong></h3><p><strong>Purpose:</strong> Shows the path of the executable file associated with a command.</p><p><strong>Example:</strong></p><pre><code class=\"language-bash\">which python3\n\n</code></pre><p><strong>Output:</strong></p><pre><code>/usr/bin/python3\n\n</code></pre><p><strong>Use Case:</strong> Locate the path of a command or executable, useful for verifying the command's installation and location.</p><h3 id=\"43-nohup-command\">43. <strong><code>nohup</code> Command</strong></h3><p><strong>Purpose:</strong> Runs a command immune to hangups, with output redirected to a file.</p><p><strong>Example:</strong></p><pre><code class=\"language-bash\">nohup ./long-running-script.sh &amp;\n\n</code></pre><p><strong>Output:</strong></p><pre><code>nohup: appending output to 'nohup.out'\n\n</code></pre><p><strong>Use Case:</strong> Execute commands that should continue running after logging out or closing the terminal, often used for long-running processes.</p><h3 id=\"44-xargs-command\">44. <strong><code>xargs</code> Command</strong></h3><p><strong>Purpose:</strong> Builds and executes command lines from standard input.</p><p><strong>Example:</strong></p><pre><code class=\"language-bash\">echo \"file1.txt file2.txt\" | xargs cat\n\n</code></pre><p><strong>Output:</strong></p><pre><code>(Content of file1.txt followed by content of file2.txt)\n\n</code></pre><p><strong>Use Case:</strong> Pass arguments from standard input to commands, useful for processing lists of files or data.</p><h3 id=\"45-vim-editor-command\">45. <strong><code>vim</code> Editor Command</strong></h3><p><strong>Purpose:</strong> Opens the Vim text editor for editing files.</p><p><strong>Example:</strong></p><pre><code class=\"language-bash\">vim file.txt\n\n</code></pre><p><strong>Output:</strong></p><pre><code>(Vim editor opens with file.txt for editing)\n\n</code></pre><p><strong>Use Case:</strong> Edit files with a powerful and configurable text editor, ideal for coding and text manipulation.</p><h3 id=\"46-emacs-editor-command\">46. <strong><code>emacs</code> Editor Command</strong></h3><p><strong>Purpose:</strong> Opens the Emacs text editor for editing files.</p><p><strong>Example:</strong></p><pre><code class=\"language-bash\">emacs file.txt\n\n</code></pre><p><strong>Output:</strong></p><pre><code>(Emacs editor opens with file.txt for editing)\n\n</code></pre><p><strong>Use Case:</strong> Edit files using a highly extensible and customizable text editor, known for its advanced features and programmability.</p><h3 id=\"47-nano-editor-command\">47. <strong><code>nano</code> Editor Command</strong></h3><p><strong>Purpose:</strong> Opens the Nano text editor for editing files.</p><p><strong>Example:</strong></p><pre><code class=\"language-bash\">nano file.txt\n\n</code></pre><p><strong>Output:</strong></p><pre><code>(Nano editor opens with file.txt for editing)\n\n</code></pre><p><strong>Use Case:</strong> Edit files with a simple and user-friendly text editor, suitable for beginners and quick edits.</p><h3 id=\"48-whoami-command\">48. <strong><code>whoami</code> Command</strong></h3><p><strong>Purpose:</strong> Displays the username of the current user.</p><p><strong>Example:</strong></p><pre><code class=\"language-bash\">whoami\n\n</code></pre><p><strong>Output:</strong></p><pre><code>username\n\n</code></pre><p><strong>Use Case:</strong> Identify the current logged-in user, useful for confirming user context in scripts or terminal sessions.</p><h3 id=\"49-who-command\">49. <strong><code>who</code> Command</strong></h3><p><strong>Purpose:</strong> Shows who is currently logged into the system.</p><p><strong>Example:</strong></p><pre><code class=\"language-bash\">who\n\n</code></pre><p><strong>Output:</strong></p><pre><code>username  tty7         2024-08-16 09:00 (:0)\nusername  pts/0        2024-08-16 09:15 (:0)\n\n</code></pre><p><strong>Use Case:</strong> List all users currently logged into the system along with their terminal sessions and login times.</p><h3 id=\"50-su-command\">50. <strong><code>su</code> Command</strong></h3><p><strong>Purpose:</strong> Switches the current user to another user account, typically used to become the root user.</p><p><strong>Example:</strong></p><pre><code class=\"language-bash\">su - username\n\n</code></pre><p><strong>Output:</strong></p><pre><code>(Switches to the specified user's shell)\n\n</code></pre><p><strong>Use Case:</strong> Change to another user account or become the root user, useful for administrative tasks and user management.</p><h3 id=\"50-su-command-1\">50. <strong><code>su</code> Command</strong></h3><p><strong>Purpose:</strong> Switches the current user to another user account, typically used to become the root user.</p><p><strong>Example:</strong></p><pre><code class=\"language-bash\">su - username\n\n</code></pre><p><strong>Output:</strong></p><pre><code>(Switches to the specified user's shell)\n\n</code></pre><p><strong>Use Case:</strong> Change to another user account or become the root user, useful for administrative tasks and user management.</p><h3 id=\"51-sudo-command\">51. <strong><code>sudo</code> Command</strong></h3><p><strong>Purpose:</strong> Executes a command as another user, typically as the root user, with elevated privileges.</p><p><strong>Example:</strong></p><pre><code class=\"language-bash\">sudo apt update\n\n</code></pre><p><strong>Output:</strong></p><pre><code>(Command executed with root privileges; prompts for user password)\n\n</code></pre><p><strong>Use Case:</strong> Perform administrative tasks or run commands with elevated privileges, useful for system maintenance and configuration.</p><h3 id=\"52-passwd-command\">52. <strong><code>passwd</code> Command</strong></h3><p><strong>Purpose:</strong> Changes the user’s password.</p><p><strong>Example:</strong></p><pre><code class=\"language-bash\">passwd\n\n</code></pre><p><strong>Output:</strong></p><pre><code>Changing password for username\nNew password:\nRetype new password:\n\n</code></pre><p><strong>Use Case:</strong> Update the user password, necessary for account security and management.</p><h3 id=\"53-ping-command\">53. <strong><code>ping</code> Command</strong></h3><p><strong>Purpose:</strong> Sends ICMP echo requests to a network host to check connectivity and measure round-trip time.</p><p><strong>Example:</strong></p><pre><code class=\"language-bash\">ping google.com\n\n</code></pre><p><strong>Output:</strong></p><pre><code>PING google.com (142.250.67.206) 56(84) bytes of data.\n64 bytes from 142.250.67.206: icmp_seq=1 ttl=117 time=12.3 ms\n64 bytes from 142.250.67.206: icmp_seq=2 ttl=117 time=11.9 ms\n\n</code></pre><p><strong>Use Case:</strong> Test network connectivity and diagnose network issues by measuring response times to network hosts.</p><h3 id=\"54-traceroute-command\">54. <strong><code>traceroute</code> Command</strong></h3><p><strong>Purpose:</strong> Traces the route packets take to a network host and displays the path with intermediate hops.</p><p><strong>Example:</strong></p><pre><code class=\"language-bash\">traceroute google.com\n\n</code></pre><p><strong>Output:</strong></p><pre><code>traceroute to google.com (142.250.67.206), 30 hops max, 60 byte packets\n 1  192.168.1.1 (192.168.1.1)  1.234 ms  0.987 ms  0.764 ms\n 2  10.0.0.1 (10.0.0.1)  2.345 ms  2.123 ms  2.012 ms\n 3  142.250.67.206 (142.250.67.206)  12.345 ms  11.987 ms  12.345 ms\n\n</code></pre><p><strong>Use Case:</strong> Diagnose network paths and identify routing issues by displaying the route and delays to a destination.</p><h3 id=\"55-clear-command\">55. <strong><code>clear</code> Command</strong></h3><p><strong>Purpose:</strong> Clears the terminal screen of all previous output.</p><p><strong>Example:</strong></p><pre><code class=\"language-bash\">clear\n</code></pre><p><strong>Output:</strong></p><pre><code>(Clears the terminal screen)\n\n</code></pre><p><strong>Use Case:</strong> Refresh the terminal display by removing previous content, useful for improving readability during terminal sessions.</p><h3 id=\"56-history-command\">56. <strong><code>history</code> Command</strong></h3><p><strong>Purpose:</strong> Displays a list of previously executed commands in the current shell session.</p><p><strong>Example:</strong></p><pre><code class=\"language-bash\">history\n\n</code></pre><p><strong>Output:</strong></p><pre><code>  1  ls -l\n  2  cd /home/user\n  3  mkdir new_directory\n  4  rm old_file.txt\n\n</code></pre><p><strong>Use Case:</strong> Review or reuse previously run commands, useful for quickly accessing or repeating recent commands.</p><h3 id=\"57-export-command\">57. <strong><code>export</code> Command</strong></h3><p><strong>Purpose:</strong> Sets environment variables or exports them to child processes.</p><p><strong>Example:</strong></p><pre><code class=\"language-bash\">export PATH=$PATH:/usr/local/bin\n\n</code></pre><p><strong>Output:</strong></p><pre><code>(No output; the environment variable is updated)\n\n</code></pre><p><strong>Use Case:</strong> Modify environment variables or make new variables available to all processes started from the current shell.</p><h3 id=\"58-crontab-command\">58. <strong><code>crontab</code> Command</strong></h3><p><strong>Purpose:</strong> Manages cron jobs, which are scheduled tasks to be run at specified intervals.</p><p><strong>Example:</strong></p><pre><code class=\"language-bash\">crontab -e\n\n</code></pre><p><strong>Output:</strong></p><pre><code>(Opens the cron table in an editor to add or edit scheduled tasks)\n\n</code></pre><p><strong>Use Case:</strong> Schedule and manage recurring tasks or scripts, useful for automating system maintenance and backups.</p><h3 id=\"59-uname-command\">59. <strong><code>uname</code> Command</strong></h3><p><strong>Purpose:</strong> Displays system information, including kernel name, version, and other details.</p><p><strong>Example:</strong></p><pre><code class=\"language-bash\">uname -a\n\n</code></pre><p><strong>Output:</strong></p><pre><code>Linux hostname 5.8.0-44-generic #1 SMP Wed Oct 7 14:00:00 UTC 2020 x86_64 x86_64 x86_64 GNU/Linux\n\n</code></pre><p><strong>Use Case:</strong> Obtain detailed information about the system's kernel and architecture, useful for system diagnostics and compatibility checks.</p><h3 id=\"60-env-command\">60. <strong><code>env</code> Command</strong></h3><p><strong>Purpose:</strong> Displays or sets environment variables in the current session.</p><p><strong>Example:</strong></p><pre><code class=\"language-bash\">env\n\n</code></pre><p><strong>Output:</strong></p><pre><code>HOME=/home/user\nPATH=/usr/local/bin:/usr/bin:/bin\nSHELL=/bin/bash\n\n</code></pre><p><strong>Use Case:</strong> View current environment variables or modify them temporarily for the session, useful for troubleshooting and configuration.</p><h3 id=\"61-printenv-command\">61. <strong><code>printenv</code> Command</strong></h3><p><strong>Purpose:</strong> Prints all or specified environment variables.</p><p><strong>Example:</strong></p><pre><code class=\"language-bash\">printenv PATH\n\n</code></pre><p><strong>Output:</strong></p><pre><code>/usr/local/bin:/usr/bin:/bin\n\n</code></pre><p><strong>Use Case:</strong> Display the value of environment variables, useful for verifying and debugging environment settings.</p>","comment_id":"66c0788ad0323348cb7a52fc","feature_image":null,"featured":false,"visibility":"public","created_at":"2024-08-17T10:16:42.000+00:00","updated_at":"2024-08-18T01:39:35.000+00:00","published_at":"2024-08-17T10:16:59.000+00:00","custom_excerpt":null,"codeinjection_head":null,"codeinjection_foot":null,"custom_template":null,"canonical_url":null,"url":"http://localhost:2368/linux-all-commands/","excerpt":"1. Introduction to Linux and Shells\n\n• Linux Overview: Linux is an open-source operating system known for its stability, security, and flexibility. It’s widely used in servers, desktops, and embedded systems.\n\n• Shells: A shell is a command-line interface (CLI) that allows users to interact with the operating system. Common shells include Bash (Bourne Again Shell), Zsh, and Fish. Shells interpret user commands and execute them.\n\nExample: Running a command in the Bash shell:\n\necho \"Hello, Linux!\"","reading_time":13,"access":true,"comments":false,"og_image":null,"og_title":null,"og_description":null,"twitter_image":null,"twitter_title":null,"twitter_description":null,"meta_title":null,"meta_description":null,"email_subject":null,"frontmatter":null,"feature_image_alt":null,"feature_image_caption":null},"previous":{"id":"66e02c5a4d1d260001ae6443","uuid":"24637549-dabb-4cea-aaf7-b94ae9aa1404","title":"man Linux Command","slug":"man-linux-command","html":"<p></p><p>Let me introduce a command that can help you understand all others.</p><p>Whenever you are uncertain about how to use a command, just type <code>man &lt;command&gt;</code> to access its manual.</p><p>It offers detailed and quite extensive information.</p><p>The screenshot below shows just a small part of the output.</p><figure class=\"kg-card kg-image-card\"><img src=\"http://localhost:2368/content/images/2024/08/Screenshot-2024-08-16-at-6.51.31-PM.png\" class=\"kg-image\" alt=\"Screenshot 2024-08-16 at 6.51.31 PM.png\" loading=\"lazy\" width=\"874\" height=\"1882\" srcset=\"http://localhost:2368/content/images/size/w600/2024/08/Screenshot-2024-08-16-at-6.51.31-PM.png 600w, http://localhost:2368/content/images/2024/08/Screenshot-2024-08-16-at-6.51.31-PM.png 874w\" sizes=\"(min-width: 720px) 720px\"></figure><p>💡 To exit this screen just type <code>q</code></p><p>Whenever you dont need such an extensive information but just a quick overview of a command, you can use tldr: <a href=\"https://tldr.sh/?ref=localhost\">https://tldr.sh/</a>.</p><p>It is not built in command, you have to install it using-</p><p><code>npm install -g tldr</code></p><p>Now you can run <code>tldr &lt;command&gt;</code> to get a concise summary and practical examples of common uses.</p><figure class=\"kg-card kg-image-card\"><img src=\"http://localhost:2368/content/images/2024/08/Screenshot-2024-08-16-at-7.00.49-PM.png\" class=\"kg-image\" alt=\"Screenshot 2024-08-16 at 7.00.49 PM.png\" loading=\"lazy\" width=\"1182\" height=\"1004\" srcset=\"http://localhost:2368/content/images/size/w600/2024/08/Screenshot-2024-08-16-at-7.00.49-PM.png 600w, http://localhost:2368/content/images/size/w1000/2024/08/Screenshot-2024-08-16-at-7.00.49-PM.png 1000w, http://localhost:2368/content/images/2024/08/Screenshot-2024-08-16-at-7.00.49-PM.png 1182w\" sizes=\"(min-width: 720px) 720px\"></figure><p>Although tldr pages aren’t a substitute for man pages, they serve as a handy tool for quickly grasping the basics of a command. You can always revisit the man page for more detailed information on the various options and parameters.</p>","comment_id":"66c07688d0323348cb7a52cc","feature_image":null,"featured":false,"visibility":"public","created_at":"2024-08-17T10:08:08.000+00:00","updated_at":"2024-08-17T10:10:06.000+00:00","published_at":"2024-08-17T10:10:06.000+00:00","custom_excerpt":null,"codeinjection_head":null,"codeinjection_foot":null,"custom_template":null,"canonical_url":null,"tags":[{"id":"66e02c594d1d260001ae6427","name":"Linux","slug":"linux","description":null,"feature_image":null,"visibility":"public","og_image":null,"og_title":null,"og_description":null,"twitter_image":null,"twitter_title":null,"twitter_description":null,"meta_title":null,"meta_description":null,"codeinjection_head":null,"codeinjection_foot":null,"canonical_url":null,"accent_color":null,"url":"http://localhost:2368/tag/linux/"},{"id":"66e02c594d1d260001ae642e","name":"#Import 2024-09-10 11:24","slug":"hash-import-2024-09-10-11-24","description":null,"feature_image":null,"visibility":"internal","og_image":null,"og_title":null,"og_description":null,"twitter_image":null,"twitter_title":null,"twitter_description":null,"meta_title":null,"meta_description":null,"codeinjection_head":null,"codeinjection_foot":null,"canonical_url":null,"accent_color":null,"url":"http://localhost:2368/404/"}],"primary_tag":{"id":"66e02c594d1d260001ae6427","name":"Linux","slug":"linux","description":null,"feature_image":null,"visibility":"public","og_image":null,"og_title":null,"og_description":null,"twitter_image":null,"twitter_title":null,"twitter_description":null,"meta_title":null,"meta_description":null,"codeinjection_head":null,"codeinjection_foot":null,"canonical_url":null,"accent_color":null,"url":"http://localhost:2368/tag/linux/"},"url":"http://localhost:2368/man-linux-command/","excerpt":"Let me introduce a command that can help you understand all others.\n\nWhenever you are uncertain about how to use a command, just type man <command> to access its manual.\n\nIt offers detailed and quite extensive information.\n\nThe screenshot below shows just a small part of the output.\n\n💡 To exit this screen just type q\n\nWhenever you dont need such an extensive information but just a quick overview of a command, you can use tldr: https://tldr.sh/.\n\nIt is not built in command, you have to install i","reading_time":1,"access":true,"comments":false,"og_image":null,"og_title":null,"og_description":null,"twitter_image":null,"twitter_title":null,"twitter_description":null,"meta_title":null,"meta_description":null,"email_subject":null,"frontmatter":null,"feature_image_alt":null,"feature_image_caption":null},"next":{"id":"66e02c5a4d1d260001ae6444","uuid":"c5ea30bb-b7cd-4d55-9441-253cf79871f0","title":"ls Linux Command","slug":"ls-linux-command","html":"<p></p><h3 id=\"ls\"><strong>ls</strong></h3><p>We can use this command to list out all files and directories present in the given directory </p><figure class=\"kg-card kg-image-card\"><img src=\"http://localhost:2368/content/images/2024/08/Screenshot-2024-08-17-at-6.24.59-PM.png\" class=\"kg-image\" alt=\"\" loading=\"lazy\" width=\"1182\" height=\"202\" srcset=\"http://localhost:2368/content/images/size/w600/2024/08/Screenshot-2024-08-17-at-6.24.59-PM.png 600w, http://localhost:2368/content/images/size/w1000/2024/08/Screenshot-2024-08-17-at-6.24.59-PM.png 1000w, http://localhost:2368/content/images/2024/08/Screenshot-2024-08-17-at-6.24.59-PM.png 1182w\" sizes=\"(min-width: 720px) 720px\"></figure><hr><blockquote>If you add a folder name or path, it will print that folder contents:</blockquote><pre><code class=\"language-bash\">ls /demo</code></pre><figure class=\"kg-card kg-image-card\"><img src=\"http://localhost:2368/content/images/2024/08/Screenshot-2024-08-17-at-6.23.24-PM.png\" class=\"kg-image\" alt=\"\" loading=\"lazy\" width=\"1182\" height=\"260\" srcset=\"http://localhost:2368/content/images/size/w600/2024/08/Screenshot-2024-08-17-at-6.23.24-PM.png 600w, http://localhost:2368/content/images/size/w1000/2024/08/Screenshot-2024-08-17-at-6.23.24-PM.png 1000w, http://localhost:2368/content/images/2024/08/Screenshot-2024-08-17-at-6.23.24-PM.png 1182w\" sizes=\"(min-width: 720px) 720px\"></figure><p>ls<strong><em> </em></strong>accepts a lot of options</p><hr><h3 id=\"ls1\"><strong><em>ls -1</em></strong></h3><p>List files one per line</p><figure class=\"kg-card kg-image-card\"><img src=\"http://localhost:2368/content/images/2024/08/Screenshot-2024-08-17-at-6.49.42-PM.png\" class=\"kg-image\" alt=\"\" loading=\"lazy\" width=\"1180\" height=\"148\" srcset=\"http://localhost:2368/content/images/size/w600/2024/08/Screenshot-2024-08-17-at-6.49.42-PM.png 600w, http://localhost:2368/content/images/size/w1000/2024/08/Screenshot-2024-08-17-at-6.49.42-PM.png 1000w, http://localhost:2368/content/images/2024/08/Screenshot-2024-08-17-at-6.49.42-PM.png 1180w\" sizes=\"(min-width: 720px) 720px\"></figure><hr><h3 id=\"lsa\"><strong><em>ls -a</em></strong></h3><p>List all files, including hidden files. The -a flag stands for “all\"</p><blockquote>Hidden files are files that start with a dot ( . )</blockquote><figure class=\"kg-card kg-image-card\"><img src=\"http://localhost:2368/content/images/2024/08/Screenshot-2024-08-17-at-6.53.57-PM.png\" class=\"kg-image\" alt=\"\" loading=\"lazy\" width=\"1184\" height=\"118\" srcset=\"http://localhost:2368/content/images/size/w600/2024/08/Screenshot-2024-08-17-at-6.53.57-PM.png 600w, http://localhost:2368/content/images/size/w1000/2024/08/Screenshot-2024-08-17-at-6.53.57-PM.png 1000w, http://localhost:2368/content/images/2024/08/Screenshot-2024-08-17-at-6.53.57-PM.png 1184w\" sizes=\"(min-width: 720px) 720px\"></figure><p>. refers to current directory.</p><p>.. refers to parent directory.</p><hr><h3 id=\"lsl\"><strong><em> ls -l</em></strong></h3><p>Long Listing<strong>:</strong> Compared to the plain ls , this returns much more information.</p><figure class=\"kg-card kg-image-card\"><img src=\"http://localhost:2368/content/images/2024/08/Screenshot-2024-08-17-at-6.54.18-PM.png\" class=\"kg-image\" alt=\"\" loading=\"lazy\" width=\"1180\" height=\"172\" srcset=\"http://localhost:2368/content/images/size/w600/2024/08/Screenshot-2024-08-17-at-6.54.18-PM.png 600w, http://localhost:2368/content/images/size/w1000/2024/08/Screenshot-2024-08-17-at-6.54.18-PM.png 1000w, http://localhost:2368/content/images/2024/08/Screenshot-2024-08-17-at-6.54.18-PM.png 1180w\" sizes=\"(min-width: 720px) 720px\"></figure><p>You have, from left to right:</p><p><strong><em>first column:</em></strong> file type and file permissions. Every file row begins with the file type and then specifies the access permissions associated with the files.</p>\n<!--kg-card-begin: html-->\n<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n    <meta charset=\"UTF-8\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <title>File Types Table</title>\n    <style>\n        body {\n            font-family: Arial, sans-serif;\n            background-color: #f4f4f4;\n            margin: 0;\n            padding: 20px;\n        }\n        table {\n            width: 100%;\n            border-collapse: collapse;\n            margin: 20px 0;\n        }\n        th, td {\n            padding: 12px;\n            text-align: left;\n            border-bottom: 1px solid #ddd;\n        }\n        th {\n            background-color: #4CAF50;\n            color: white;\n        }\n        tr:nth-child(even) {\n            background-color: #f2f2f2;\n        }\n        .directory {\n            color: blue;\n            font-weight: bold;\n        }\n        .normal-file {\n            color: black;\n        }\n        .link-file {\n            color: green;\n        }\n        .char-special-file {\n            color: red;\n        }\n        .block-special-file {\n            color: purple;\n        }\n    </style>\n</head>\n<body>\n\n    <table>\n        <thead>\n            <tr>\n                <th>Type</th>\n                <th>Description</th>\n            </tr>\n        </thead>\n        <tbody>\n            <tr>\n                <td class=\"directory\">d</td>\n                <td>Directory File</td>\n            </tr>\n            <tr>\n                <td class=\"normal-file\">-</td>\n                <td>Normal File</td>\n            </tr>\n            <tr>\n                <td class=\"link-file\">l</td>\n                <td>Link File</td>\n            </tr>\n            <tr>\n                <td class=\"char-special-file\">c</td>\n                <td>Character Special File</td>\n            </tr>\n            <tr>\n                <td class=\"block-special-file\">b</td>\n                <td>Block Special File</td>\n            </tr>\n        </tbody>\n    </table>\n</body>\n</html>\n<!--kg-card-end: html-->\n<p><strong><em>second column:</em></strong> number of links to that file</p><p><strong><em>third column:</em></strong>&nbsp;owner of the file or the superuser (who has the administrating power)</p><p><strong><em>fourth column:</em></strong>&nbsp;group of owner/superuser</p><p><strong><em>fifth column:</em></strong> file size</p><p><strong><em>sixth column:</em></strong> date and time when the file was created or lastly modified</p><p><strong><em>last column:</em></strong> name of the file or the directory</p><p></p><p>Below diagram explain what is the meaning of each part of the output(left to right)</p><figure class=\"kg-card kg-image-card kg-card-hascaption\"><img src=\"http://localhost:2368/content/images/2024/08/Untitled-2.png\" class=\"kg-image\" alt=\"\" loading=\"lazy\" width=\"596\" height=\"470\"><figcaption><span style=\"white-space: pre-wrap;\">(Source:&nbsp;</span><a href=\"http://www.csit.parkland.edu/?ref=localhost\"><span style=\"white-space: pre-wrap;\">http://www.csit.parkland.edu</span></a><span style=\"white-space: pre-wrap;\">)</span></figcaption></figure><hr><h3 id=\"lsd\">ls -d */</h3><p>Only list directories</p><figure class=\"kg-card kg-image-card\"><img src=\"http://localhost:2368/content/images/2024/08/Screenshot-2024-08-17-at-7.32.30-PM.png\" class=\"kg-image\" alt=\"\" loading=\"lazy\" width=\"1182\" height=\"170\" srcset=\"http://localhost:2368/content/images/size/w600/2024/08/Screenshot-2024-08-17-at-7.32.30-PM.png 600w, http://localhost:2368/content/images/size/w1000/2024/08/Screenshot-2024-08-17-at-7.32.30-PM.png 1000w, http://localhost:2368/content/images/2024/08/Screenshot-2024-08-17-at-7.32.30-PM.png 1182w\" sizes=\"(min-width: 720px) 720px\"></figure><hr><h2 id=\"other-useful-options\">Other Useful options:</h2><p><strong>• -t: </strong>Sorts files by modification time, with the most recently modified files appearing first.</p><p><strong>• -r: </strong>Reverses the order of the sort</p><p><strong>• -S:</strong> Sorts files by size. By default, it sorts in descending order (largest files first).</p><p><strong>• -R: </strong>Recursively lists directories and their contents.</p><p><strong>• -h: </strong>Displays file sizes in a human-readable format, using units like kilobytes (K), megabytes (M), gigabytes (G), etc.</p><p><strong>• -F: </strong>Appends a character to each file name to indicate the file type:</p>\n<!--kg-card-begin: html-->\n<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n    <meta charset=\"UTF-8\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n\n    <style>\n        body {\n            font-family: Arial, sans-serif;\n            background-color: #f4f4f4;\n            margin: 0;\n            padding: 20px;\n        }\n        table {\n            width: 100%;\n            border-collapse: collapse;\n            margin: 20px 0;\n        }\n        th, td {\n            padding: 12px;\n            text-align: left;\n            border-bottom: 1px solid #ddd;\n        }\n        th {\n            background-color: #4CAF50;\n            color: white;\n        }\n        tr:nth-child(even) {\n            background-color: #f2f2f2;\n        }\n        .directory {\n            color: blue;\n            font-weight: bold;\n        }\n        .executable {\n            color: green;\n        }\n        .link {\n            color: orange;\n        }\n        .pipe {\n            color: red;\n        }\n        .socket {\n            color: purple;\n        }\n    </style>\n</head>\n<body>\n\n    <table>\n    \n        <tbody>\n            <tr>\n                <td class=\"directory\">/</td>\n                <td>Directory</td>\n            </tr>\n            <tr>\n                <td class=\"executable\">*</td>\n                <td>Executable File</td>\n            </tr>\n            <tr>\n                <td class=\"link\">@</td>\n                <td>Symbolic Link</td>\n            </tr>\n            <tr>\n                <td class=\"pipe\">|</td>\n                <td>Named Pipe (FIFO)</td>\n            </tr>\n            <tr>\n                <td class=\"socket\">=</td>\n                <td>Socket</td>\n            </tr>\n        </tbody>\n    </table>\n</body>\n</html>\n<!--kg-card-end: html-->\n<p></p><hr><blockquote><strong>We can also use multiple options at a time:</strong></blockquote><figure class=\"kg-card kg-image-card kg-card-hascaption\"><img src=\"http://localhost:2368/content/images/2024/08/Screenshot-2024-08-17-at-6.54.42-PM-1.png\" class=\"kg-image\" alt=\"\" loading=\"lazy\" width=\"1174\" height=\"282\" srcset=\"http://localhost:2368/content/images/size/w600/2024/08/Screenshot-2024-08-17-at-6.54.42-PM-1.png 600w, http://localhost:2368/content/images/size/w1000/2024/08/Screenshot-2024-08-17-at-6.54.42-PM-1.png 1000w, http://localhost:2368/content/images/2024/08/Screenshot-2024-08-17-at-6.54.42-PM-1.png 1174w\" sizes=\"(min-width: 720px) 720px\"><figcaption><span style=\"white-space: pre-wrap;\">ls -al command</span></figcaption></figure><figure class=\"kg-card kg-image-card kg-card-hascaption\"><img src=\"http://localhost:2368/content/images/2024/08/Screenshot-2024-08-17-at-7.43.24-PM.png\" class=\"kg-image\" alt=\"\" loading=\"lazy\" width=\"1170\" height=\"198\" srcset=\"http://localhost:2368/content/images/size/w600/2024/08/Screenshot-2024-08-17-at-7.43.24-PM.png 600w, http://localhost:2368/content/images/size/w1000/2024/08/Screenshot-2024-08-17-at-7.43.24-PM.png 1000w, http://localhost:2368/content/images/2024/08/Screenshot-2024-08-17-at-7.43.24-PM.png 1170w\" sizes=\"(min-width: 720px) 720px\"><figcaption><span style=\"white-space: pre-wrap;\">ls -ltF command</span></figcaption></figure><p></p><p></p>","comment_id":"66c0778ed0323348cb7a52d8","feature_image":null,"featured":false,"visibility":"public","created_at":"2024-08-17T10:12:30.000+00:00","updated_at":"2024-09-05T00:36:09.000+00:00","published_at":"2024-08-17T13:31:17.000+00:00","custom_excerpt":"Understanding the ls Command in Linux: A Comprehensive Guide","codeinjection_head":"<script type=\"application/json\">\n  { \"guide_name\":\"linux-guide\",\n  \n  \"priority\": 2 }\n</script>","codeinjection_foot":null,"custom_template":null,"canonical_url":null,"tags":[{"id":"66e02c594d1d260001ae6427","name":"Linux","slug":"linux","description":null,"feature_image":null,"visibility":"public","og_image":null,"og_title":null,"og_description":null,"twitter_image":null,"twitter_title":null,"twitter_description":null,"meta_title":null,"meta_description":null,"codeinjection_head":null,"codeinjection_foot":null,"canonical_url":null,"accent_color":null,"url":"http://localhost:2368/tag/linux/"},{"id":"66e02c594d1d260001ae642e","name":"#Import 2024-09-10 11:24","slug":"hash-import-2024-09-10-11-24","description":null,"feature_image":null,"visibility":"internal","og_image":null,"og_title":null,"og_description":null,"twitter_image":null,"twitter_title":null,"twitter_description":null,"meta_title":null,"meta_description":null,"codeinjection_head":null,"codeinjection_foot":null,"canonical_url":null,"accent_color":null,"url":"http://localhost:2368/404/"}],"primary_tag":{"id":"66e02c594d1d260001ae6427","name":"Linux","slug":"linux","description":null,"feature_image":null,"visibility":"public","og_image":null,"og_title":null,"og_description":null,"twitter_image":null,"twitter_title":null,"twitter_description":null,"meta_title":null,"meta_description":null,"codeinjection_head":null,"codeinjection_foot":null,"canonical_url":null,"accent_color":null,"url":"http://localhost:2368/tag/linux/"},"url":"http://localhost:2368/ls-linux-command/","excerpt":"Understanding the ls Command in Linux: A Comprehensive Guide","reading_time":3,"access":true,"comments":false,"og_image":null,"og_title":null,"og_description":null,"twitter_image":null,"twitter_title":null,"twitter_description":null,"meta_title":null,"meta_description":null,"email_subject":null,"frontmatter":null,"feature_image_alt":null,"feature_image_caption":null}},"__N_SSG":true}