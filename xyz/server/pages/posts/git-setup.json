{"pageProps":{"post":{"slug":"git-setup","id":"66e02c5a4d1d260001ae643c","uuid":"6d8317a9-d9c0-4f9e-8f1d-6c4760e48aa6","title":"Git Setup","html":"<p></p><h2 id=\"download-git\">Download Git</h2><p>Download git from this link - <a href=\"https://git-scm.com/downloads?ref=localhost\">https://git-scm.com/downloads</a></p><p>Once installed, open the terminal and run following command to check if git is installed or not:</p><p><code>git --version</code></p><figure class=\"kg-card kg-image-card\"><img src=\"http://localhost:2368/content/images/2024/08/Screenshot-2024-08-10-at-1.42.45-AM.png\" class=\"kg-image\" alt=\"Screenshot 2024-08-10 at 1.42.45 AM.png\" loading=\"lazy\" width=\"998\" height=\"146\" srcset=\"http://localhost:2368/content/images/size/w600/2024/08/Screenshot-2024-08-10-at-1.42.45-AM.png 600w, http://localhost:2368/content/images/2024/08/Screenshot-2024-08-10-at-1.42.45-AM.png 998w\" sizes=\"(min-width: 720px) 720px\"></figure><p>If installation is successfull it will give version of the git.</p><h2 id=\"configure-git\">Configure Git</h2><p>Now let Git know who you are. This is important for version control systems, as each Git commit uses this information:</p><pre><code class=\"language-bash\">git config --global [user.name] \"NAME\"\ngit config --global user.email \"EMAIL\"\n</code></pre><h2 id=\"creating-git-directoryfolder\">Creating Git Directory/Folder</h2><p>Let's create a new folder with name demo for our project:</p><pre><code class=\"language-bash\">mkdir demo\ncd demo\nls\n</code></pre><figure class=\"kg-card kg-image-card\"><img src=\"http://localhost:2368/content/images/2024/08/Screenshot-2024-08-10-at-1.49.53-AM.png\" class=\"kg-image\" alt=\"Screenshot 2024-08-10 at 1.49.53 AM.png\" loading=\"lazy\" width=\"988\" height=\"186\" srcset=\"http://localhost:2368/content/images/size/w600/2024/08/Screenshot-2024-08-10-at-1.49.53-AM.png 600w, http://localhost:2368/content/images/2024/08/Screenshot-2024-08-10-at-1.49.53-AM.png 988w\" sizes=\"(min-width: 720px) 720px\"></figure><p>As we can see the demo directory is empty.</p><h2 id=\"initialize-git\">Initialize Git</h2><p>Once we have navigated to the demo folder, now we can initialize Git in this folder:</p><pre><code class=\"language-bash\">git init \n</code></pre><figure class=\"kg-card kg-image-card\"><img src=\"http://localhost:2368/content/images/2024/08/Screenshot-2024-08-10-at-1.51.39-AM.png\" class=\"kg-image\" alt=\"Screenshot 2024-08-10 at 1.51.39 AM.png\" loading=\"lazy\" width=\"976\" height=\"428\" srcset=\"http://localhost:2368/content/images/size/w600/2024/08/Screenshot-2024-08-10-at-1.51.39-AM.png 600w, http://localhost:2368/content/images/2024/08/Screenshot-2024-08-10-at-1.51.39-AM.png 976w\" sizes=\"(min-width: 720px) 720px\"></figure><p>Git creates a hidden folder <code>.git</code> to keep track of the changes.</p><p>It is a hidden folder hence we used <code>ls -a</code> command to see it</p><h2 id=\"initialize-git-1\">Initialize Git</h2><p>Let’s make some changes in this newly intialized repository!!</p><figure class=\"kg-card kg-image-card\"><img src=\"http://localhost:2368/content/images/2024/08/Screenshot-2024-08-10-at-1.56.22-AM--1-.png\" class=\"kg-image\" alt=\"Screenshot 2024-08-10 at 1.56.22 AM.png\" loading=\"lazy\" width=\"1328\" height=\"116\" srcset=\"http://localhost:2368/content/images/size/w600/2024/08/Screenshot-2024-08-10-at-1.56.22-AM--1-.png 600w, http://localhost:2368/content/images/size/w1000/2024/08/Screenshot-2024-08-10-at-1.56.22-AM--1-.png 1000w, http://localhost:2368/content/images/2024/08/Screenshot-2024-08-10-at-1.56.22-AM--1-.png 1328w\" sizes=\"(min-width: 720px) 720px\"></figure><p>Hence we created a file demo.txt and added text “Hello World” in it.</p><h2 id=\"check-git-status\">Check Git Status</h2><p><code>git status</code> command shows us the current state of our files in a Git project, telling us if we have made any changes, if there are files ready to be saved, and if there are new files that Git hasn’t started tracking yet.</p><figure class=\"kg-card kg-image-card\"><img src=\"http://localhost:2368/content/images/2024/08/Screenshot-2024-08-10-at-1.59.29-AM.png\" class=\"kg-image\" alt=\"\" loading=\"lazy\" width=\"1320\" height=\"320\" srcset=\"http://localhost:2368/content/images/size/w600/2024/08/Screenshot-2024-08-10-at-1.59.29-AM.png 600w, http://localhost:2368/content/images/size/w1000/2024/08/Screenshot-2024-08-10-at-1.59.29-AM.png 1000w, http://localhost:2368/content/images/2024/08/Screenshot-2024-08-10-at-1.59.29-AM.png 1320w\" sizes=\"(min-width: 720px) 720px\"></figure>","comment_id":"66c071fdd0323348cb7a5257","feature_image":null,"featured":false,"visibility":"public","created_at":"2024-08-17T09:48:45.000+00:00","updated_at":"2024-08-17T09:51:05.000+00:00","published_at":"2024-08-17T09:51:05.000+00:00","custom_excerpt":null,"codeinjection_head":null,"codeinjection_foot":null,"custom_template":null,"canonical_url":null,"url":"http://localhost:2368/git-setup/","excerpt":"Download Git\n\nDownload git from this link - https://git-scm.com/downloads\n\nOnce installed, open the terminal and run following command to check if git is installed or not:\n\ngit --version\n\nIf installation is successfull it will give version of the git.\n\n\nConfigure Git\n\nNow let Git know who you are. This is important for version control systems, as each Git commit uses this information:\n\ngit config --global [user.name] \"NAME\"\ngit config --global user.email \"EMAIL\"\n\n\n\nCreating Git Directory/Folder\n","reading_time":2,"access":true,"comments":false,"og_image":null,"og_title":null,"og_description":null,"twitter_image":null,"twitter_title":null,"twitter_description":null,"meta_title":null,"meta_description":null,"email_subject":null,"frontmatter":null,"feature_image_alt":null,"feature_image_caption":null},"previous":{"id":"66e02c5a4d1d260001ae643b","uuid":"db84b81e-80f8-445e-9590-13b707acfe73","title":"Set Environment Variable in Linux","slug":"set-environment-variable-in-linux","html":"<p></p><p>Environment variables are dynamic values that the operating system and applications use to determine settings and configuration options.</p><p>These are used by applications launched in shells or sub-shells. These variables have a name and their respected value.</p><h3 id=\"setting-environment-variables-in-linux\">Setting Environment Variables in Linux</h3><p></p><ol>\n<li>\n<p><strong>Temporary Environment Variables:</strong> Set for the duration of the terminal session.</p>\n<pre><code class=\"language-bash\">VARIABLE_NAME=value\n</code></pre>\n<ul>\n<li>\n<p>Example:</p>\n<pre><code class=\"language-bash\">MY_VAR=\"Hello\"\necho $MY_VAR  # Output: Hello\n</code></pre>\n</li>\n</ul>\n</li>\n<li>\n<p><strong>Permanent Environment Variables:</strong> Set permanently for all sessions.</p>\n<ul>\n<li>\n<p>Add the export command to profile files such as <code>.bashrc</code>, <code>.bash_profile</code>, or <code>/etc/profile</code> for system-wide settings.</p>\n</li>\n<li>\n<p>Syntax:</p>\n<pre><code class=\"language-bash\">export VARIABLE_NAME=value\n</code></pre>\n</li>\n<li>\n<p>Example (add to <code>.bashrc</code>):</p>\n<pre><code class=\"language-bash\">export MY_VAR=\"Hello\"\n</code></pre>\n</li>\n</ul>\n</li>\n<li>\n<p><strong>Viewing Environment Variables:</strong></p>\n<ul>\n<li>Use the <code>printenv</code> or <code>env</code> command to list environment variables.</li>\n</ul>\n</li>\n<li>\n<p><strong>Unsetting Environment Variables:</strong></p>\n<ul>\n<li>\n<p>Remove an environment variable using the <code>unset</code> command.</p>\n</li>\n<li>\n<p>Example:</p>\n<pre><code class=\"language-bash\">unset VARIABLE_NAME\n\n</code></pre>\n</li>\n</ul>\n</li>\n<li>\n<p><strong>Modifying Environment Variables:</strong></p>\n<ul>\n<li>\n<p>Update the value of an existing environment variable.</p>\n</li>\n<li>\n<p>Syntax:</p>\n<pre><code class=\"language-bash\">export VARIABLE_NAME=new_value\n\n</code></pre>\n</li>\n<li>\n<p>Example:</p>\n<pre><code class=\"language-bash\">export MY_VAR=\"NewValue\"\n\n</code></pre>\n</li>\n</ul>\n</li>\n</ol>\n","comment_id":"66c070acd0323348cb7a523b","feature_image":null,"featured":false,"visibility":"public","created_at":"2024-08-17T09:43:08.000+00:00","updated_at":"2024-08-17T09:48:14.000+00:00","published_at":"2024-08-17T09:48:14.000+00:00","custom_excerpt":null,"codeinjection_head":null,"codeinjection_foot":null,"custom_template":null,"canonical_url":null,"tags":[{"id":"66e02c594d1d260001ae6427","name":"Linux","slug":"linux","description":null,"feature_image":null,"visibility":"public","og_image":null,"og_title":null,"og_description":null,"twitter_image":null,"twitter_title":null,"twitter_description":null,"meta_title":null,"meta_description":null,"codeinjection_head":null,"codeinjection_foot":null,"canonical_url":null,"accent_color":null,"url":"http://localhost:2368/tag/linux/"},{"id":"66e02c594d1d260001ae642e","name":"#Import 2024-09-10 11:24","slug":"hash-import-2024-09-10-11-24","description":null,"feature_image":null,"visibility":"internal","og_image":null,"og_title":null,"og_description":null,"twitter_image":null,"twitter_title":null,"twitter_description":null,"meta_title":null,"meta_description":null,"codeinjection_head":null,"codeinjection_foot":null,"canonical_url":null,"accent_color":null,"url":"http://localhost:2368/404/"}],"primary_tag":{"id":"66e02c594d1d260001ae6427","name":"Linux","slug":"linux","description":null,"feature_image":null,"visibility":"public","og_image":null,"og_title":null,"og_description":null,"twitter_image":null,"twitter_title":null,"twitter_description":null,"meta_title":null,"meta_description":null,"codeinjection_head":null,"codeinjection_foot":null,"canonical_url":null,"accent_color":null,"url":"http://localhost:2368/tag/linux/"},"url":"http://localhost:2368/set-environment-variable-in-linux/","excerpt":"Environment variables are dynamic values that the operating system and applications use to determine settings and configuration options.\n\nThese are used by applications launched in shells or sub-shells. These variables have a name and their respected value.\n\n\nSetting Environment Variables in Linux\n\n\n\n 1. \n    \n    \n    Temporary Environment Variables: Set for the duration of the terminal session.\n    \n    \n    VARIABLE_NAME=value\n    \n    \n    \n    * \n      \n      \n      Example:\n      \n      \n ","reading_time":1,"access":true,"comments":false,"og_image":null,"og_title":null,"og_description":null,"twitter_image":null,"twitter_title":null,"twitter_description":null,"meta_title":null,"meta_description":null,"email_subject":null,"frontmatter":null,"feature_image_alt":null,"feature_image_caption":null},"next":{"id":"66e02c5a4d1d260001ae643e","uuid":"75790561-b87e-44f5-9902-39bb64ccf0b0","title":"Git Add & Commit Commands","slug":"git-add-commit-commands","html":"<p></p><h2 id=\"git-add\"><strong>Git add</strong></h2><p>The git add command is like picking up specific pictures from your messy desk(Working Directory) and putting them on the table(Staging Area) to prepare for saving.</p><pre><code class=\"language-bash\">git add demo.txt\n</code></pre><p>This command stages the changes made to demo.txt and gets it ready for the next commit.</p><figure class=\"kg-card kg-image-card\"><img src=\"http://localhost:2368/content/images/2024/08/Screenshot-2024-08-10-at-2.17.10-AM.png\" class=\"kg-image\" alt=\"Screenshot 2024-08-10 at 2.17.10 AM.png\" loading=\"lazy\" width=\"988\" height=\"552\" srcset=\"http://localhost:2368/content/images/size/w600/2024/08/Screenshot-2024-08-10-at-2.17.10-AM.png 600w, http://localhost:2368/content/images/2024/08/Screenshot-2024-08-10-at-2.17.10-AM.png 988w\" sizes=\"(min-width: 720px) 720px\"></figure><p>To stage more than one file at a time using git we can use-</p><p><code>git add --all</code> or <code>git add .</code></p><p>This will&nbsp;stage&nbsp;all changes (new, modified, and deleted) files in the working directory.</p><h2 id=\"git-commit\"><strong>Git commit</strong></h2><p>The git commit command is like taking the changes from the table (staging area) and permanently saving them in the album (repository).</p><p>This command commits (saves) the staged changes with a message describing what you did, like a label for the photo in your album.</p><pre><code class=\"language-bash\">git commit -m \"message”\n</code></pre><figure class=\"kg-card kg-image-card\"><img src=\"http://localhost:2368/content/images/2024/08/Screenshot-2024-08-10-at-2.19.08-AM--1-.png\" class=\"kg-image\" alt=\"Screenshot 2024-08-10 at 2.19.08 AM.png\" loading=\"lazy\" width=\"1014\" height=\"120\" srcset=\"http://localhost:2368/content/images/size/w600/2024/08/Screenshot-2024-08-10-at-2.19.08-AM--1-.png 600w, http://localhost:2368/content/images/size/w1000/2024/08/Screenshot-2024-08-10-at-2.19.08-AM--1-.png 1000w, http://localhost:2368/content/images/2024/08/Screenshot-2024-08-10-at-2.19.08-AM--1-.png 1014w\" sizes=\"(min-width: 720px) 720px\"></figure><h2 id=\"git-commit-without-stage\">Git Commit without Stage</h2><p>We can commit changes directly, skipping the staging environment-</p><pre><code class=\"language-bash\">git commit -a -m \"message”\n</code></pre><p>The&nbsp;<code>-a</code>&nbsp;option will automatically stage every changed, already tracked file.</p><h2 id=\"git-commit-log\">Git Commit Log</h2><p>To view the history of commits for a repository, we can use:</p><pre><code class=\"language-bash\">git log\n</code></pre><figure class=\"kg-card kg-image-card\"><img src=\"http://localhost:2368/content/images/2024/08/Screenshot-2024-08-10-at-2.28.22-AM.png\" class=\"kg-image\" alt=\"Screenshot 2024-08-10 at 2.28.22 AM.png\" loading=\"lazy\" width=\"1024\" height=\"200\" srcset=\"http://localhost:2368/content/images/size/w600/2024/08/Screenshot-2024-08-10-at-2.28.22-AM.png 600w, http://localhost:2368/content/images/size/w1000/2024/08/Screenshot-2024-08-10-at-2.28.22-AM.png 1000w, http://localhost:2368/content/images/2024/08/Screenshot-2024-08-10-at-2.28.22-AM.png 1024w\" sizes=\"(min-width: 720px) 720px\"></figure>","comment_id":"66c07375d0323348cb7a5276","feature_image":null,"featured":false,"visibility":"public","created_at":"2024-08-17T09:55:01.000+00:00","updated_at":"2024-08-17T09:56:18.000+00:00","published_at":"2024-08-17T09:56:18.000+00:00","custom_excerpt":null,"codeinjection_head":null,"codeinjection_foot":null,"custom_template":null,"canonical_url":null,"tags":[{"id":"66e02c594d1d260001ae6428","name":"Git","slug":"git","description":null,"feature_image":null,"visibility":"public","og_image":null,"og_title":null,"og_description":null,"twitter_image":null,"twitter_title":null,"twitter_description":null,"meta_title":null,"meta_description":null,"codeinjection_head":null,"codeinjection_foot":null,"canonical_url":null,"accent_color":null,"url":"http://localhost:2368/tag/git/"},{"id":"66e02c594d1d260001ae642e","name":"#Import 2024-09-10 11:24","slug":"hash-import-2024-09-10-11-24","description":null,"feature_image":null,"visibility":"internal","og_image":null,"og_title":null,"og_description":null,"twitter_image":null,"twitter_title":null,"twitter_description":null,"meta_title":null,"meta_description":null,"codeinjection_head":null,"codeinjection_foot":null,"canonical_url":null,"accent_color":null,"url":"http://localhost:2368/404/"}],"primary_tag":{"id":"66e02c594d1d260001ae6428","name":"Git","slug":"git","description":null,"feature_image":null,"visibility":"public","og_image":null,"og_title":null,"og_description":null,"twitter_image":null,"twitter_title":null,"twitter_description":null,"meta_title":null,"meta_description":null,"codeinjection_head":null,"codeinjection_foot":null,"canonical_url":null,"accent_color":null,"url":"http://localhost:2368/tag/git/"},"url":"http://localhost:2368/git-add-commit-commands/","excerpt":"Git add\n\nThe git add command is like picking up specific pictures from your messy desk(Working Directory) and putting them on the table(Staging Area) to prepare for saving.\n\ngit add demo.txt\n\n\nThis command stages the changes made to demo.txt and gets it ready for the next commit.\n\nTo stage more than one file at a time using git we can use-\n\ngit add --all or git add .\n\nThis will stage all changes (new, modified, and deleted) files in the working directory.\n\n\nGit commit\n\nThe git commit command is ","reading_time":1,"access":true,"comments":false,"og_image":null,"og_title":null,"og_description":null,"twitter_image":null,"twitter_title":null,"twitter_description":null,"meta_title":null,"meta_description":null,"email_subject":null,"frontmatter":null,"feature_image_alt":null,"feature_image_caption":null}},"__N_SSG":true}